{"ast":null,"code":"import React, { Component } from \"react\";\nimport { withRouter } from \"../common/with-router\";\nimport MedicineDataService from \"../services/medicine.service\";\nclass Medicine extends Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    this.getMedicine(this.props.router.params.id);\n  }\n  onChangeName(e) {\n    const name = e.target.value;\n    this.setState(prevState => ({\n      currentMedicine: {\n        ...prevState.currentMedicine,\n        name: name\n      }\n    }));\n  }\n  onChangeDescription(e) {\n    const description = e.target.value;\n    this.setState(prevState => ({\n      currentMedicine: {\n        ...prevState.currentMedicine,\n        description: description\n      }\n    }));\n  }\n  getMedicine(id) {\n    MedicineDataService.get(id).then(response => {\n      this.setState({\n        currentMedicine: response.data\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n  updateStock(staus) {\n    var data = {\n      id: this.state.currentMedicine.id,\n      name: this.state.currentMedicine.name,\n      description: this.state.currentMedicine.description,\n      low_stock: status\n    };\n  }\n  updateMedicine() {\n    MedicineDataService.update(this.state.currentMedicine.id, this.state.currentMedicine).then(response => {\n      console.log(response.data);\n      this.setState({\n        message: \"The medicine was updated successfully!\"\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n  delateMedicine() {\n    MedicineDataService.delete(this.state.currentMedicine.id).then(response => {\n      console.log(response.data);\n      this.props.router.navigate(\"/medicines\");\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n}","map":{"version":3,"names":["React","Component","withRouter","MedicineDataService","Medicine","constructor","props","componentDidMount","getMedicine","router","params","id","onChangeName","e","name","target","value","setState","prevState","currentMedicine","onChangeDescription","description","get","then","response","data","console","log","catch","updateStock","staus","state","low_stock","status","updateMedicine","update","message","delateMedicine","delete","navigate"],"sources":["/Users/azou/Documents/Personal/react-crud/lab-mgmt-frontend/src/components/medicine.component.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"../common/with-router\";\nimport MedicineDataService from \"../services/medicine.service\";\n\nclass Medicine extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.getMedicine(this.props.router.params.id);\n  }\n\n  onChangeName(e) {\n    const name = e.target.value;\n\n    this.setState((prevState) => ({\n      currentMedicine: {\n        ...prevState.currentMedicine,\n        name: name,\n      },\n    }));\n  }\n\n  onChangeDescription(e) {\n    const description = e.target.value;\n\n    this.setState((prevState) => ({\n      currentMedicine: {\n        ...prevState.currentMedicine,\n        description: description,\n      },\n    }));\n  }\n\n  getMedicine(id) {\n    MedicineDataService.get(id)\n      .then((response) => {\n        this.setState({\n          currentMedicine: response.data,\n        });\n        console.log(response.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  updateStock(staus) {\n    var data = {\n      id: this.state.currentMedicine.id,\n      name: this.state.currentMedicine.name,\n      description: this.state.currentMedicine.description,\n      low_stock: status,\n    };\n  }\n\n  updateMedicine() {\n    MedicineDataService.update(\n      this.state.currentMedicine.id,\n      this.state.currentMedicine\n    )\n      .then((response) => {\n        console.log(response.data);\n        this.setState({\n          message: \"The medicine was updated successfully!\",\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  delateMedicine() {\n    MedicineDataService.delete(this.state.currentMedicine.id)\n      .then((response) => {\n        console.log(response.data);\n        this.props.router.navigate(\"/medicines\");\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,UAAU,QAAQ,uBAAuB;AAClD,OAAOC,mBAAmB,MAAM,8BAA8B;AAE9D,MAAMC,QAAQ,SAASH,SAAS,CAAC;EAC/BI,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;EACd;EAEAC,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACC,WAAW,CAAC,IAAI,CAACF,KAAK,CAACG,MAAM,CAACC,MAAM,CAACC,EAAE,CAAC;EAC/C;EAEAC,YAAYA,CAACC,CAAC,EAAE;IACd,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAE3B,IAAI,CAACC,QAAQ,CAAEC,SAAS,KAAM;MAC5BC,eAAe,EAAE;QACf,GAAGD,SAAS,CAACC,eAAe;QAC5BL,IAAI,EAAEA;MACR;IACF,CAAC,CAAC,CAAC;EACL;EAEAM,mBAAmBA,CAACP,CAAC,EAAE;IACrB,MAAMQ,WAAW,GAAGR,CAAC,CAACE,MAAM,CAACC,KAAK;IAElC,IAAI,CAACC,QAAQ,CAAEC,SAAS,KAAM;MAC5BC,eAAe,EAAE;QACf,GAAGD,SAAS,CAACC,eAAe;QAC5BE,WAAW,EAAEA;MACf;IACF,CAAC,CAAC,CAAC;EACL;EAEAb,WAAWA,CAACG,EAAE,EAAE;IACdR,mBAAmB,CAACmB,GAAG,CAACX,EAAE,CAAC,CACxBY,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACP,QAAQ,CAAC;QACZE,eAAe,EAAEK,QAAQ,CAACC;MAC5B,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACC,IAAI,CAAC;IAC5B,CAAC,CAAC,CACDG,KAAK,CAAEf,CAAC,IAAK;MACZa,OAAO,CAACC,GAAG,CAACd,CAAC,CAAC;IAChB,CAAC,CAAC;EACN;EAEAgB,WAAWA,CAACC,KAAK,EAAE;IACjB,IAAIL,IAAI,GAAG;MACTd,EAAE,EAAE,IAAI,CAACoB,KAAK,CAACZ,eAAe,CAACR,EAAE;MACjCG,IAAI,EAAE,IAAI,CAACiB,KAAK,CAACZ,eAAe,CAACL,IAAI;MACrCO,WAAW,EAAE,IAAI,CAACU,KAAK,CAACZ,eAAe,CAACE,WAAW;MACnDW,SAAS,EAAEC;IACb,CAAC;EACH;EAEAC,cAAcA,CAAA,EAAG;IACf/B,mBAAmB,CAACgC,MAAM,CACxB,IAAI,CAACJ,KAAK,CAACZ,eAAe,CAACR,EAAE,EAC7B,IAAI,CAACoB,KAAK,CAACZ,eAAe,CAC3B,CACEI,IAAI,CAAEC,QAAQ,IAAK;MAClBE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACC,IAAI,CAAC;MAC1B,IAAI,CAACR,QAAQ,CAAC;QACZmB,OAAO,EAAE;MACX,CAAC,CAAC;IACJ,CAAC,CAAC,CACDR,KAAK,CAAEf,CAAC,IAAK;MACZa,OAAO,CAACC,GAAG,CAACd,CAAC,CAAC;IAChB,CAAC,CAAC;EACN;EAEAwB,cAAcA,CAAA,EAAG;IACflC,mBAAmB,CAACmC,MAAM,CAAC,IAAI,CAACP,KAAK,CAACZ,eAAe,CAACR,EAAE,CAAC,CACtDY,IAAI,CAAEC,QAAQ,IAAK;MAClBE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACC,IAAI,CAAC;MAC1B,IAAI,CAACnB,KAAK,CAACG,MAAM,CAAC8B,QAAQ,CAAC,YAAY,CAAC;IAC1C,CAAC,CAAC,CACDX,KAAK,CAAEf,CAAC,IAAK;MACZa,OAAO,CAACC,GAAG,CAACd,CAAC,CAAC;IAChB,CAAC,CAAC;EACN;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}