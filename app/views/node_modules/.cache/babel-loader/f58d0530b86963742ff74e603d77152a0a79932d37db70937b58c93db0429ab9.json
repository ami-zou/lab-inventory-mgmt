{"ast":null,"code":"import React, { Component } from \"react\";\nimport { withRouter } from \"../common/with-router\";\nimport MedicineDataService from \"../services/medicine.service\";\nclass Medicine extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.getMedicine = this.getMedicine.bind(this);\n    this.updateMedicine = this.updateMedicine.bind(this);\n    this.deleteMedicine = this.deleteMedicine.bind(this);\n  }\n  componentDidMount() {\n    this.getMedicine(this.props.router.params.id);\n  }\n  onChangeName(e) {\n    const name = e.target.value;\n    this.setState(prevState => ({\n      currentMedicine: {\n        ...prevState.currentMedicine,\n        name: name\n      }\n    }));\n  }\n  onChangeDescription(e) {\n    const description = e.target.value;\n    this.setState(prevState => ({\n      currentMedicine: {\n        ...prevState.currentMedicine,\n        description: description\n      }\n    }));\n  }\n  getMedicine(id) {\n    MedicineDataService.get(id).then(response => {\n      this.setState({\n        currentMedicine: response.data\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n  updateMedicine() {\n    MedicineDataService.update(this.state.currentMedicine.id, this.state.currentMedicine).then(response => {\n      console.log(response.data);\n      this.setState({\n        message: \"The medicine was updated successfully!\"\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n  deleteMedicine() {\n    MedicineDataService.delete(this.state.currentMedicine.id).then(response => {\n      console.log(response.data);\n      this.props.router.navigate(\"/medicines\");\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n}","map":{"version":3,"names":["React","Component","withRouter","MedicineDataService","Medicine","constructor","props","onChangeTitle","bind","onChangeDescription","getMedicine","updateMedicine","deleteMedicine","componentDidMount","router","params","id","onChangeName","e","name","target","value","setState","prevState","currentMedicine","description","get","then","response","data","console","log","catch","update","state","message","delete","navigate"],"sources":["/Users/azou/Documents/Personal/react-crud/lab-mgmt-frontend/src/components/medicine.component.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"../common/with-router\";\nimport MedicineDataService from \"../services/medicine.service\";\n\nclass Medicine extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.getMedicine = this.getMedicine.bind(this);\n    this.updateMedicine = this.updateMedicine.bind(this);\n    this.deleteMedicine = this.deleteMedicine.bind(this);\n  }\n\n  componentDidMount() {\n    this.getMedicine(this.props.router.params.id);\n  }\n\n  onChangeName(e) {\n    const name = e.target.value;\n\n    this.setState((prevState) => ({\n      currentMedicine: {\n        ...prevState.currentMedicine,\n        name: name,\n      },\n    }));\n  }\n\n  onChangeDescription(e) {\n    const description = e.target.value;\n\n    this.setState((prevState) => ({\n      currentMedicine: {\n        ...prevState.currentMedicine,\n        description: description,\n      },\n    }));\n  }\n\n  getMedicine(id) {\n    MedicineDataService.get(id)\n      .then((response) => {\n        this.setState({\n          currentMedicine: response.data,\n        });\n        console.log(response.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  updateMedicine() {\n    MedicineDataService.update(\n      this.state.currentMedicine.id,\n      this.state.currentMedicine\n    )\n      .then((response) => {\n        console.log(response.data);\n        this.setState({\n          message: \"The medicine was updated successfully!\",\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  deleteMedicine() {\n    MedicineDataService.delete(this.state.currentMedicine.id)\n      .then((response) => {\n        console.log(response.data);\n        this.props.router.navigate(\"/medicines\");\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}